{"version":3,"sources":["components/nav.js","pages/checkout.js","actions/checkoutActions.js","pages/not-found-page.js","pages/food-list.js","pages/add-food.js","actions/addFood.js","pages/add-promo.js","actions/addPromo.js","pages/promo-list.js","routes/main-route.js","App.js","serviceWorker.js","reducers/rootReducer.js","reducers/foodReducer.js","reducers/promoReducer.js","reducers/checkoutReducer.js","index.js","store.js"],"names":["Nav","drawer","document","querySelector","obfuscator","querySelectorAll","forEach","element","addEventListener","classList","remove","fixedHeader","title","className","to","Component","Checkout","props","state","showCheckOutSnackbar","snackbarMessage","event","target","value","toUpperCase","foodName","quantity","trim","isNaN","foods","hasOwnProperty","addCheckoutFood","setState","promoCode","promo","addCheckoutPromo","deliveryFee","parseInt","setDeliveryFee","this","foodList","Object","keys","map","price","reduce","a","b","checkout","discount","Math","round","maximum","getTotalPrice","getDiscount","getDeliveryFee","onChange","label","floatingLabel","style","width","marginRight","list","id","key","pattern","error","raised","accent","ripple","class","colspan","getTotal","active","onTimeout","disableAddFoodSnackbar","connect","dispatch","checkoutFoodData","type","data","checkoutPromoData","deliferyFee","NotFoundPage","FoodList","console","log","push","shadow","rows","name","tooltip","numeric","AddFood","isAddFoodSucceed","foodNameInput","addFood","foodId","foodData","window","location","hash","display","action","onClick","viewFood","AddPromo","isAddPromoSucceed","promoInput","addPromo","promoData","disableAddPromoSnackbar","viewPromo","PromoList","promoList","MainRoute","exact","path","component","App","Boolean","hostname","match","combineReducers","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39547e68.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Header, Drawer, Navigation, Layout } from \"react-mdl\";\n\nclass Nav extends Component {\n    componentDidMount() {\n        let drawer = document.querySelector('div.mdl-layout__drawer');\n        let obfuscator = document.querySelector('div.mdl-layout__obfuscator');\n        let drawerMenuItems = document.querySelectorAll('div.mdl-layout__drawer a.mdl-navigation__link');\n        drawerMenuItems.forEach(element => {\n            element.addEventListener('click', () => {\n                drawer.classList.remove(\"is-visible\");\n                obfuscator.classList.remove(\"is-visible\");\n            })\n        })\n    }\n\n    render() {\n        return(\n            <Layout fixedHeader>\n                <Header title=\"Food Order\">\n                    <Navigation className=\"top-nav\">\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/checkout\">Checkout</Link>\n                        <Link to=\"/add-food\">Add Food</Link>\n                        <Link to=\"/add-promo\">Add Promo</Link>\n                        <Link to=\"/promo-list\">Promo List</Link>\n                    </Navigation>\n                </Header>\n                <Drawer title=\"Food Order\">\n                    <Navigation>\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/checkout\">Checkout</Link>\n                        <Link to=\"/add-food\">Add Food</Link>\n                        <Link to=\"/add-promo\">Add Promo</Link>\n                        <Link to=\"/promo-list\">Promo List</Link>\n                    </Navigation>\n                </Drawer>\n            </Layout>\n        );\n    }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { Textfield, Button, Snackbar } from \"react-mdl\";\nimport { connect } from 'react-redux';\nimport { addCheckoutFood, addCheckoutPromo, setDeliveryFee } from \"../actions/checkoutActions\";\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addCheckoutFood: (checkoutFoodData) => dispatch(addCheckoutFood(checkoutFoodData)),\n    addCheckoutPromo: (checkoutPromoData) => dispatch(addCheckoutPromo(checkoutPromoData)),\n    setDeliveryFee: (deliveryFee) => dispatch(setDeliveryFee(deliveryFee))\n})\n\nclass Checkout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showCheckOutSnackbar: false,\n            snackbarMessage: null\n        }\n    }\n\n    componentDidMount() {\n        document.title = \"Check Out\";\n\n        document.querySelector(\"#textfield-FoodName\").addEventListener(\"input\", event => {\n            event.target.value = event.target.value.toUpperCase();\n        });\n\n        document.querySelector(\"#textfield-PromoCode\").addEventListener(\"input\", event => {\n            event.target.value = event.target.value.toUpperCase();\n        });\n\n        document.querySelector(\"#add-food-btn\").addEventListener(\"click\", () => {\n            let foodName = document.querySelector(\"#textfield-FoodName\").value;\n            let quantity = document.querySelector(\"#textfield-Quantity\").value;\n            \n            if (foodName.trim() !== \"\" && quantity.trim()!== \"\" && !isNaN(quantity.trim())) {\n                if (this.props.foods.hasOwnProperty(foodName)) {\n                    this.props.addCheckoutFood({\n                        foodName: foodName,\n                        quantity: quantity\n                    });\n\n                    document.querySelector(\"#textfield-FoodName\").value = '';\n                    document.querySelector(\"#textfield-Quantity\").value = '';\n    \n                    this.setState({\n                        showCheckOutSnackbar: true,\n                        snackbarMessage: `Food ${foodName} added to checkout list`\n                    });\n                }\n                else {\n                    this.setState({\n                        showCheckOutSnackbar: true,\n                        snackbarMessage: `Food ${foodName} not found`\n                    });\n                }\n            }\n        });\n\n        document.querySelector(\"#apply-promo-btn\").addEventListener(\"click\", () => {\n            let promoCode = document.querySelector(\"#textfield-PromoCode\").value;\n            \n            if (promoCode.trim() !== \"\") {\n                if (this.props.promo.hasOwnProperty(promoCode)) {\n                    this.props.addCheckoutPromo(promoCode);\n\n                    document.querySelector(\"#textfield-PromoCode\").value = '';\n    \n                    this.setState({\n                        showCheckOutSnackbar: true,\n                        snackbarMessage: `Promo Code \"${promoCode}\" applied`\n                    });\n                }\n                else {\n                    this.props.addCheckoutPromo(null);\n\n                    this.setState({\n                        showCheckOutSnackbar: true,\n                        snackbarMessage: `Promo Code \"${promoCode}\" not found. Promo not applied`\n                    });\n                }\n            }\n        });\n\n        document.querySelector(\"#textfield-DeliveryFee\").addEventListener(\"input\", event => {\n            let deliveryFee = event.target.value.trim()\n            if (deliveryFee !== \"\" && !isNaN(deliveryFee)) {\n                deliveryFee = parseInt(deliveryFee);\n\n                this.props.setDeliveryFee(deliveryFee);\n            }\n        });\n    }\n\n    disableAddFoodSnackbar() {\n        this.setState({\n            showCheckOutSnackbar: false\n        });\n    }\n\n    getTotalPrice(foodList) {\n        return Object.keys(foodList).map(value => this.props.foods[value].price * foodList[value])\n        .reduce((a, b) => a + b, 0)\n    }\n\n    getDiscount(foodList) {\n        if (this.props.checkout.promoCode) {\n            let discount = Object.keys(foodList)\n            .map(value => this.props.foods[value].price * foodList[value])\n            .reduce((a, b) => a + b, 0) * this.props.promo[this.props.checkout.promoCode].discount / 100;\n\n            discount = Math.round(discount / 100) * 100;\n\n            if (discount > this.props.promo[this.props.checkout.promoCode].maximum) {\n                discount = this.props.promo[this.props.checkout.promoCode].maximum;\n            }\n\n            return -discount;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    getDeliveryFee() {\n        return this.props.checkout.deliveryFee || 0;\n    }\n\n    getTotal() {\n        return this.getTotalPrice(this.props.checkout.foodList) + this.getDiscount(this.props.checkout.foodList) + this.getDeliveryFee();\n    }\n\n    render() {\n        return(\n            <div>\n            <h1>Check Out</h1>\n\n                <div className=\"add-food-form\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Food Name\"\n                        floatingLabel\n                        style={{width: '200px', marginRight: 10}}\n                        list=\"food-list\"\n                    />\n\n                    <datalist id=\"food-list\">\n                        {Object.keys(this.props.foods).map((key) => <option key={key} value={this.props.foods[key].foodName} />)}\n                    </datalist>\n\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Quantity\"\n                        floatingLabel\n                        style={{width: '200px', marginRight: 10}}\n                        pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                        error=\"Quantity be in number\"\n                    />\n\n                    <Button id=\"add-food-btn\" raised accent ripple>Add</Button>\n                </div>\n\n                <div className=\"apply-promo-form\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Promo Code\"\n                        floatingLabel\n                        style={{width: '200px', marginRight: 10}}\n                    />\n\n                    <Button id=\"apply-promo-btn\" raised accent ripple>Apply</Button>\n                </div>\n\n                <div className=\"delivery-fee-form\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Delivery Fee\"\n                        floatingLabel\n                        style={{width: '200px', marginRight: 10}}\n                        pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                        error=\"Delivery Fee must be in number\"\n                    />\n                </div>\n\n                <div className=\"table-container\">\n                    {/* <DataTable\n                        id=\"checkout-table\"\n                        shadow={0}\n                        rows={[]}\n                    >\n                        <TableHeader name=\"foodName\" tooltip=\"Food Name\">Food Name</TableHeader>\n                        <TableHeader numeric name=\"price\" tooltip=\"Price in Rp\">Price (Rp)</TableHeader>\n                        <TableHeader numeric name=\"quantity\" tooltip=\"Quantity\">Quantity</TableHeader>\n                        <TableHeader numeric name=\"subTotal\" tooltip=\"Sub Total in Rp\">Sub Total (Rp)</TableHeader>\n                    </DataTable> */}\n\n                    <table class=\"mdl-data-table mdl-js-data-table\">\n                        <thead>\n                            <tr>\n                                <th class=\"mdl-data-table__cell--non-numeric\">Food Name</th>\n                                <th>Price (Rp)</th>\n                                <th>Quantity</th>\n                                <th>Sub Total (Rp)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                Object.keys(this.props.checkout.foodList).map(value => {\n                                    return(\n                                        <tr>\n                                            <td class=\"mdl-data-table__cell--non-numeric\">{value}</td>\n                                            <td>{this.props.foods[value].price}</td>\n                                            <td>{this.props.checkout.foodList[value]}</td>\n                                            <td>{this.props.foods[value].price * this.props.checkout.foodList[value]}</td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <th colspan=\"3\">Total Price</th>\n                                <td id=\"total-price-value\">\n                                    { this.getTotalPrice(this.props.checkout.foodList) }\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th colspan=\"3\">Discount <span id=\"promo-value\">{ this.props.checkout.promoCode }</span></th>\n                                <td id=\"discount-value\">\n                                    { this.getDiscount(this.props.checkout.foodList) }\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th colspan=\"3\">Delivery Fee</th>\n                                <td id=\"delivery-fee-value\">{this.getDeliveryFee()}</td>\n                            </tr>\n\n                            <tr>\n                                <th colspan=\"3\">Total</th>\n                                <td id=\"total-value\">{this.getTotal()}</td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n\n                <Snackbar\n                    active={this.state.showCheckOutSnackbar}\n                    onTimeout={() => this.disableAddFoodSnackbar()}>{this.state.snackbarMessage}</Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","export const addCheckoutFood = checkoutFoodData => dispatch => {\n    dispatch({\n        type: 'ADD_CHECKOUT_FOOD',\n        data: checkoutFoodData\n    })\n}\n\nexport const addCheckoutPromo = checkoutPromoData => dispatch => {\n    dispatch({\n        type: 'ADD_CHECKOUT_PROMO',\n        data: checkoutPromoData\n    })\n}\n\nexport const setDeliveryFee = deliferyFee => dispatch => {\n    dispatch({\n        type: 'SET_DELIVERY_FEE',\n        data: deliferyFee\n    })\n}\n","import React, { Component } from 'react';\n\nclass NotFoundPage extends Component {\n    componentDidMount() {\n        document.title = \"Page Not Found\";\n    }\n\n    render() {\n        return(\n            <h1>Page Not Found</h1>\n        );\n    }\n}\n\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DataTable, TableHeader } from \"react-mdl\";\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nclass FoodList extends Component {\n    state = { foodList: [] };\n\n    componentDidMount() {\n        console.log(this.props);\n        document.title = \"Food List\";\n\n        let foodList = [];\n\n        for (let key in this.props.foods) {\n            let value = this.props.foods[key];\n\n            foodList.push(value);\n        }\n\n        this.setState({\n            foodList: foodList\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Food List</h1>\n                <div className=\"table-container\">\n                    <DataTable\n                        shadow={0}\n                        rows={this.state.foodList}\n                    >\n                        <TableHeader name=\"foodName\" tooltip=\"Food Name\">Food Name</TableHeader>\n                        <TableHeader numeric name=\"price\" tooltip=\"Price\">Price (Rp)</TableHeader>\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(FoodList);","import React, { Component } from 'react';\nimport { Textfield, Button, Snackbar } from \"react-mdl\";\nimport { connect } from 'react-redux';\nimport { addFood } from '../actions/addFood';\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addFood: (foodData) => dispatch(addFood(foodData))\n})\n\nclass AddFood extends Component {\n    state={ isAddFoodSucceed: false };\n\n    componentDidMount() {\n        document.title = \"Add Food\";\n\n        document.querySelector(\"#textfield-FoodName\").addEventListener(\"input\", event => {\n            let foodNameInput = event.target;\n            foodNameInput.value = foodNameInput.value.toUpperCase();\n        });\n\n        document.querySelector(\"#add-btn\").addEventListener(\"click\", () => {\n            let foodName = document.querySelector(\"#textfield-FoodName\").value;\n            let price = document.querySelector(\"#textfield-Price\").value;\n            \n            if (foodName.trim() !== \"\" && price.trim()!== \"\" && !isNaN(price.trim())) {\n                this.props.addFood({\n                    foodId: foodName,\n                    foodData: {\n                        foodName: foodName,\n                        price: price\n                    }\n                });\n\n                document.querySelector(\"#textfield-FoodName\").value = '';\n                document.querySelector(\"#textfield-Price\").value = '';\n\n                this.setState({\n                    isAddFoodSucceed: true\n                });\n            }\n        });\n    }\n\n    disableAddFoodSnackbar() {\n        this.setState({\n            isAddFoodSucceed: false\n        });\n    }\n\n    viewFood() {\n        window.location.hash = \"#/\"\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Add Food</h1>\n\n                <div className=\"add-food-container\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Food Name\"\n                        floatingLabel\n                        style={{width: '200px', display: 'block'}}\n                    />\n\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Price\"\n                        floatingLabel\n                        pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                        error=\"Price must be in number\"\n                        style={{width: '200px', display: 'block'}}\n                    />\n\n                    <Button id=\"add-btn\" raised accent ripple>Add</Button>\n                </div>\n\n                <Snackbar\n                    active={this.state.isAddFoodSucceed}\n                    onTimeout={() => this.disableAddFoodSnackbar()}\n                    action=\"View Foods\"\n                    onClick={this.viewFood}>Add food succeeded</Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFood);","export const addFood = foodData => dispatch => {\n    dispatch({\n        type: 'ADD_FOOD',\n        data: foodData\n    })\n}\n","import React, { Component } from 'react';\nimport { Textfield, Button, Snackbar } from \"react-mdl\";\nimport { connect } from 'react-redux';\nimport { addPromo } from '../actions/addPromo';\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addPromo: (promoData) => dispatch(addPromo(promoData))\n})\n\nclass AddPromo extends Component {\n    state={ isAddPromoSucceed: false };\n\n    componentDidMount() {\n        document.title = \"Add Promo\";\n\n        document.querySelector(\"#textfield-PromoCode\").addEventListener(\"input\", event => {\n            let promoInput = event.target;\n            promoInput.value = promoInput.value.toUpperCase();\n        });\n\n        document.querySelector(\"#add-btn\").addEventListener(\"click\", () => {\n            let promoCode = document.querySelector(\"#textfield-PromoCode\").value;\n            let discount = document.querySelector(\"#textfield-Discount\").value;\n            let maximum = document.querySelector(\"#textfield-Maximum\").value;\n            \n            if (promoCode.trim() !== \"\" && discount.trim()!== \"\" && !isNaN(discount.trim()) && maximum.trim()!== \"\" && !isNaN(maximum.trim())) {\n                this.props.addPromo({\n                    promoCode: promoCode,\n                    promoData: {\n                        discount: discount,\n                        maximum: maximum\n                    }\n                });\n\n                document.querySelector(\"#textfield-PromoCode\").value = null;\n                document.querySelector(\"#textfield-Discount\").value = null;\n                document.querySelector(\"#textfield-Maximum\").value = null;\n\n                this.setState({\n                    isAddPromoSucceed: true\n                });\n            }\n        });\n    }\n\n    disableAddPromoSnackbar() {\n        this.setState({\n            isAddPromoSucceed: false\n        });\n    }\n\n    viewPromo() {\n        window.location.hash = \"#/promo-list\"\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Add Promo</h1>\n\n                <div className=\"add-food-container\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Promo Code\"\n                        floatingLabel\n                        style={{width: '200px', display: 'block'}}\n                    />\n\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Discount (%)\"\n                        floatingLabel\n                        pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                        error=\"Discount must be in number\"\n                        style={{width: '200px', display: 'block'}}\n                    />\n\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Maximum\"\n                        floatingLabel\n                        pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                        error=\"Maximum discount must be in number\"\n                        style={{width: '200px', display: 'block'}}\n                    />\n\n                    <Button id=\"add-btn\" raised accent ripple>Add</Button>\n                </div>\n\n                <Snackbar\n                    active={this.state.isAddPromoSucceed}\n                    onTimeout={() => this.disableAddPromoSnackbar()}\n                    action=\"View Promo\"\n                    onClick={this.viewPromo}>Add Promo succeeded</Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPromo);","export const addPromo = promoData => dispatch => {\n    dispatch({\n        type: 'ADD_PROMO',\n        data: promoData\n    })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DataTable, TableHeader } from \"react-mdl\";\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nclass PromoList extends Component {\n    state = { promoList: [] };\n\n    componentDidMount() {\n        document.title = \"Promo List\";\n\n        let promoList = [];\n\n        for (let key in this.props.promo) {\n            let value = this.props.promo[key];\n            value.promoCode = key;\n\n            promoList.push(value);\n        }\n\n        this.setState({\n            promoList: promoList\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Promo List</h1>\n\n                <div className=\"table-container\">\n                    <DataTable\n                        shadow={0}\n                        rows={this.state.promoList}\n                    >\n                        <TableHeader name=\"promoCode\" tooltip=\"Promo Code\">Promo Code</TableHeader>\n                        <TableHeader numeric name=\"discount\" tooltip=\"Discount in %\">Discount (%)</TableHeader>\n                        <TableHeader numeric name=\"maximum\" tooltip=\"Maximum discount in Rp\">Maximum Discount (Rp)</TableHeader>\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(PromoList);","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\n//pages\nimport Checkout from '../pages/checkout';\nimport NotFoundPage from '../pages/not-found-page';\nimport FoodList from '../pages/food-list';\nimport AddFood from '../pages/add-food';\nimport AddPromo from '../pages/add-promo';\nimport PromoList from '../pages/promo-list';\n\nconst MainRoute = () => {\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={FoodList} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/add-food\" component={AddFood} />\n            <Route path=\"/add-promo\" component={AddPromo} />\n            <Route path=\"/promo-list\" component={PromoList} />\n            <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n    );\n}\n\nexport default MainRoute;","import React, { Component } from 'react';\nimport Nav from './components/nav'\nimport { Layout, Content } from \"react-mdl\";\nimport MainRoute from \"./routes/main-route\";\n\nclass App extends Component {\n  render() {\n    return(\n      <div className=\"App\">\n        <Layout fixedHeader>\n          <Nav />\n          <Content>\n            <div className=\"inner-content\">\n              <MainRoute />\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport foodReducer from './foodReducer';\nimport promoReducer from './promoReducer';\nimport checkoutReducer from './checkoutReducer'\n\nexport default combineReducers({\n    foods: foodReducer, \n    promo: promoReducer,\n    checkout: checkoutReducer\n});\n\n","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'ADD_FOOD':\n            state = {...state}\n            state[action.data.foodId] = {...action.data.foodData}\n\n            return state;\n        default:\n            return state\n    }\n}\n","export default (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_PROMO':\n            state = {...state};\n            state[action.data.promoCode] = {...action.data.promoData}\n\n            return state;\n        default:\n            return state\n    }\n}\n","export default (state = { }, action) => {\n    switch (action.type) {\n        case 'ADD_CHECKOUT_FOOD':\n            state = { ...state };\n            state.foodList[action.data.foodName] = action.data.quantity;\n\n            return state;\n\n        case 'ADD_CHECKOUT_PROMO':\n            return {\n                ...state,\n                promoCode: action.data\n            };\n\n        case 'SET_DELIVERY_FEE':\n            return {\n                ...state,\n                deliveryFee: action.data\n            };\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport './assets/css/style.css';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState = {foods: {}, promo: {}, checkout: { foodList: {} }}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk))\n    );\n}\n"],"sourceRoot":""}